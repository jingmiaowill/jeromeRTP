package com.jerome.rtp.protocol.data;import org.glassfish.grizzly.Buffer;import com.jerome.rtp.protocol.utils.BufferUtils;/** * 如果是纯中继 则不需要解析报内容. *  * @author Will.jingmiao * */public class SimpleDataPacket extends DataPacket {	public SimpleDataPacket(Buffer packet) {		super(packet);	}		public static DataPacket decode(Buffer buffer) {		if (BufferUtils.readableBytes(buffer) < 12) {            throw new IllegalArgumentException("A RTP packet must be at least 12 octets long");        }		        //1.获取版本号,填充,扩展,CSRC计数(CC)        DataPacket packet = new DataPacket(buffer);                //TODO 最小力度的解析包体.        //1.获取版本号,填充,扩展,CSRC计数(CC)        byte b = buffer.get();        packet.version = RtpVersion.fromByte(b);        //2.获取标志,负载类型        b = buffer.get();        packet.marker = (b & 0x80) > 0; // mask 0000 0001        packet.payloadType = (b & 0x7f); // mask 0111 1111        //3.获取序列号,时间戳,SSRC        packet.sequenceNumber = BufferUtils.getOneUnsignedShort(buffer);        packet.timestamp = BufferUtils.getOneUnsignedInt(buffer);        packet.ssrc = BufferUtils.getOneUnsignedInt(buffer);                BufferUtils.skipBytes(buffer,BufferUtils.readableBytes(buffer));        return packet;	}}