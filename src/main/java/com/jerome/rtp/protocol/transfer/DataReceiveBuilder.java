package com.jerome.rtp.protocol.transfer;import org.glassfish.grizzly.filterchain.FilterChainBuilder;import org.glassfish.grizzly.filterchain.TransportFilter;import org.glassfish.grizzly.nio.transport.UDPNIOTransport;import org.glassfish.grizzly.nio.transport.UDPNIOTransportBuilder;import com.jerome.rtp.protocol.DataPacketHandler;import com.jerome.rtp.protocol.parse.DataParse;public class DataReceiveBuilder {	public static DataReceiveBuilder stateless() {		return new DataReceiveBuilder();	}	public UDPNIOTransport build(DataPacketHandler handler) {		FilterChainBuilder filterChainBuilder = FilterChainBuilder.stateless();		filterChainBuilder.add(new TransportFilter());		filterChainBuilder.add(new DataParse());		filterChainBuilder.add(new DataReceive(handler));		UDPNIOTransportBuilder builder = UDPNIOTransportBuilder.newInstance();		builder.setProcessor(filterChainBuilder.build());		UDPNIOTransport transport = builder.build();		return transport;	}}